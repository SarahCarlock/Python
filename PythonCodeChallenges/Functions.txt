Function Syntax

As a refresher, function syntax looks like this:

def some_function(some_input1, some_input2):
  # … do something with the inputs …
  return output

For example, a function that returns the sum of the first and last elements of a given list might look like this:

def first_plus_last(lst):
  return lst[0] + lst[-1]

And this would produce output like:

>>> first_plus_last([1, 2, 3, 4])
5
>>> first_plus_last([8, 2, 5, -8])
0
>>> first_plus_last([-10, 2, 3, -4])
-14

1. Tenth Power
# Write your tenth_power function here:
def tenth_power(num):
  return num ** 10
# Uncomment these function calls to test your tenth_power function:
print(tenth_power(1))
# 1 to the 10th power is 1
print(tenth_power(0))
# 0 to the 10th power is 0
print(tenth_power(2))
# 2 to the 10th power is 1024

2. Square Root
# Write your square_root function here:
def square_root(num):
  return num ** 0.5
# Uncomment these function calls to test your square_root function:
print(square_root(16))
# should print 4
print(square_root(100))
# should print 10

3. Win Percentage
# Write your win_percentage function here:
def win_percentage(wins, losses):
  total_games = wins + losses
  ratio = wins/total_games
  return ratio * 100
# Uncomment these function calls to test your win_percentage function:
print(win_percentage(5, 5))
# should print 50
print(win_percentage(10, 0))
# should print 100

4. Average
# Write your average function here:
def average(num1, num2):
  sum = num1 + num2
  average = sum / 2
  return average
# Uncomment these function calls to test your average function:
print(average(1, 100))
# The average of 1 and 100 is 50.5
print(average(1, -1))
# The average of 1 and -1 is 0

OR 

def average(num1, num2):
  return (num1 + num2) / 2

5. Remainder
# Write your remainder function here:
def remainder(num1, num2):
  mod_num1 = num1 * 2
  mod_num2 = num2 / 2
  return mod_num1 % mod_num2
# Uncomment these function calls to test your remainder function:
print(remainder(15, 14))
# should print 2
print(remainder(9, 6))
# should print 0

OR 

def remainder(num1, num2):
  return (2 * num1) % (num2 / 2)